{"version":3,"file":"static/js/656.c585dd3e.chunk.js","mappings":"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","sources":["functions.js","pages/URLS.js"],"sourcesContent":["export function getYearMonthDay(year, month, day) {\r\n    const months31Day = [1, 3, 5, 7, 8, 10, 12]\r\n    const months30Day = [4, 6, 9, 11]\r\n\r\n    const obj = {\r\n        year: year, month: month, day: day\r\n    }\r\n\r\n    const getPrevMonthDays = () => {\r\n        if(month === 1 & day === 1) return 31 \r\n        if (months31Day.includes(month - 1)) return 31\r\n        if (months30Day.includes(month - 1)) return 30\r\n        else return 29\r\n    }\r\n\r\n\r\n    // previus  month for 31 days months\r\n    if (months31Day.includes(month) & day < 1) {\r\n        obj.month = month - 1\r\n        obj.day = getPrevMonthDays()\r\n        if (month === 1) {\r\n            obj.year = year - 1\r\n            obj.month = 12\r\n            obj.day = 31\r\n        }\r\n        return obj\r\n    }\r\n    // next  month for 31 days months\r\n    if (months31Day.includes(month) & day > 31) {\r\n        obj.month = month + 1\r\n        obj.day = 1\r\n        if (month === 12) {\r\n            obj.year = year + 1\r\n            obj.month = 1\r\n        }\r\n        return obj\r\n    }\r\n\r\n    // previus next month for 30 days months\r\n    if (months30Day.includes(month) & day < 1) {\r\n        obj.month = month - 1\r\n        obj.day = getPrevMonthDays()\r\n        if (month === 1) {\r\n            obj.year = year - 1;\r\n            obj.month = 12\r\n\r\n        }\r\n        return obj\r\n    }\r\n    if (months30Day.includes(month) & day > 30) {\r\n        obj.month = month + 1\r\n        obj.day = 1\r\n        if (month === 12) {\r\n            obj.year = year + 1\r\n            obj.month = 1\r\n        }\r\n        return obj\r\n    }\r\n\r\n    if (month === 2) {\r\n        // previus next month for 29 days months\r\n        if (day < 1) return { year: year, month: month - 1, day: getPrevMonthDays() }\r\n        if (day > 29) return { year: year, month: month + 1, day: 1 }\r\n    }\r\n\r\n    return obj\r\n}","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { getYearMonthDay } from '../functions'\r\nimport { API_HOST } from '../hosts'\r\n\r\nfunction URLS() {\r\n    const BY_DAY = 'day views'\r\n    const ALL_VISITS = 'all urls'\r\n    let year = new Date().getFullYear()\r\n    let month = (new Date().getMonth()) + 1\r\n    let day = new Date().getDate()\r\n    const [list, setList] = useState(false)\r\n    const [view, setView] = useState(ALL_VISITS)\r\n    const [fetchurl, setFetchurl] = useState(API_HOST + 'views/urls')\r\n    const [dateVal, setDateVal] = useState('')\r\n    const [sYear, setSYear] = useState(year)\r\n    const [sMonth, setSMonth] = useState(month)\r\n    const [sDay, setSDay] = useState(day)\r\n    const [error, setError] = useState(false)\r\n    useEffect(() => {\r\n        axios.get(fetchurl)\r\n            .then(res => {\r\n                if (res.data.error) {\r\n                    setError(res.data.msg)\r\n                }\r\n                else\r\n                    setList(res.data);\r\n            })\r\n            .catch(err => { console.log(err) })\r\n    }, [fetchurl, sDay])\r\n\r\n    const changeView = (v) => {\r\n        if (view === v) return false\r\n        setList(false)\r\n        setView(v)\r\n        switch (v) {\r\n            case BY_DAY:\r\n                setFetchurl(`${API_HOST}views/urls?by=date&year=${year}&month=${month}&day=${day}`)\r\n                setError(false)\r\n                break;\r\n            default:\r\n                setFetchurl(API_HOST + 'views/urls')\r\n                setError(false)\r\n                break;\r\n        }\r\n    }\r\n\r\n    const nextDay = () => {\r\n        const intYear = parseInt(sYear)\r\n        const intMonth = parseInt(sMonth)\r\n        const intDay = parseInt(sDay)\r\n        const fullDate = getYearMonthDay(intYear, intMonth, intDay + 1)\r\n        setSDay(fullDate.day)\r\n        setSMonth(fullDate.month)\r\n        setSYear(fullDate.year)\r\n\r\n        setFetchurl(`${API_HOST}views/urls?by=date&year=${fullDate.year}&month=${fullDate.month}&day=${fullDate.day}`)\r\n    }\r\n\r\n    const preDay = () => {\r\n        const intYear = parseInt(sYear)\r\n        const intMonth = parseInt(sMonth)\r\n        const intDay = parseInt(sDay)\r\n        const fullDate = getYearMonthDay(intYear, intMonth, intDay - 1)\r\n        setSDay(fullDate.day)\r\n        setSMonth(fullDate.month)\r\n        setSYear(fullDate.year)\r\n\r\n        setFetchurl(`${API_HOST}views/urls?by=date&year=${fullDate.year}&month=${fullDate.month}&day=${fullDate.day}`)\r\n    }\r\n\r\n    const handleChangeDate = () => {\r\n        const v = document.getElementById('date_uekitf').value\r\n        const vArr = v.split('.')\r\n        year = vArr[0]\r\n        setSYear(year)\r\n        month = vArr[1]\r\n        setSMonth(month)\r\n        day = vArr[2]\r\n        setSDay(day)\r\n        setFetchurl(`${API_HOST}views/urls?by=date&year=${year}&month=${month}&day=${day}`)\r\n    }\r\n    const listcondition = () => {\r\n        if (!error) if (list) return true\r\n        return false\r\n    }\r\n    return (\r\n        <div>\r\n            <div className='pages-xaooiz'>\r\n                <h1>URLS</h1>\r\n                {/* by navi */}\r\n                <div className='page-navi-cibkpx'>\r\n                    <div className=\"navi-item-iittlu\" onClick={() => { changeView(BY_DAY) }}>{BY_DAY}</div>\r\n                    <div className=\"navi-item-iittlu\" onClick={() => { changeView(ALL_VISITS) }}>{ALL_VISITS}</div>\r\n                </div>\r\n                {/* loading */}\r\n                {!list && <div className='wxubuf'>Loading ...</div>}\r\n                {/* list counters */}\r\n                {<>\r\n                    {/* grouped by title */}\r\n                    <h1>{view}</h1>\r\n                    {/* by day input */}\r\n                    {view === BY_DAY && <div className='inputDate-viuyxd'>\r\n                        <input type=\"text\" id='date_uekitf' placeholder={`${year}.${month}.${day}`} value={dateVal} onChange={(v) => setDateVal(v.target.value)} />\r\n                        <button onClick={handleChangeDate}>submit</button>\r\n                        <h1>{`${sYear}.${sMonth}.${sDay}`}</h1>\r\n                        <div className='controllers-sspqly'>\r\n                            <div className='ovjocl' onClick={nextDay}>next</div>\r\n                            <div className='ovjocl' onClick={preDay}>pre</div>\r\n                        </div>\r\n                    </div>}\r\n                    {/* all views list  */}\r\n                    {listcondition() && list.map(item => (\r\n                        <div key={'pages_item_' + item.url.replaceAll('/', '')} className='page-item-nqsvit'>\r\n                            <div className='page-visits-epspuj'>\r\n                                {item.count} visits</div>\r\n                            <div className='meecdb'>\r\n                                <a href={item.url} target=\"blank\">{item.url.replaceAll('https://shaarawy.fra1.digitaloceanspaces.com', 'space')}</a>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default URLS"],"names":["getYearMonthDay","year","month","day","months31Day","months30Day","obj","getPrevMonthDays","includes","BY_DAY","ALL_VISITS","Date","getFullYear","getMonth","getDate","useState","list","setList","view","setView","API_HOST","fetchurl","setFetchurl","dateVal","setDateVal","sYear","setSYear","sMonth","setSMonth","sDay","setSDay","error","setError","useEffect","axios","then","res","data","msg","catch","err","console","log","changeView","v","className","onClick","type","id","placeholder","value","onChange","target","vArr","document","getElementById","split","intYear","parseInt","intMonth","intDay","fullDate","map","item","count","href","url","replaceAll"],"sourceRoot":""}